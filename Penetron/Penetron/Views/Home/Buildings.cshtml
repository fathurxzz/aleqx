@using Penetron
@using SiteExtensions.Graphics
@model Penetron.Models.BuildingModel
<div class="content-container">
    <div class="content">
        <div class="title-container">
            @if (Model.Building != null)
            {
                
                <div class="parentTitle">
                    @if (Model.ParentTitle != null)
                    {
                        @Model.ParentTitle <text>/</text>
                    }
                </div>
            
                <table class="title">
                    <tr>
                        <td class="left">
                        </td>
                        <td class="center">@Model.Building.Title
                        </td>
                        <td class="right">
                        </td>
                    </tr>
                </table>
            }
        </div>
        <div class="text-container">
            @if (Request.IsAuthenticated && Model.Building != null && Model.Building.CategoryLevel == 0)
            {
                <div class="adminLinkContainer">
                    @Html.ActionLink("Редактировать основную страницу", "EditMainPage", "Building", new { area = "Admin", type = ViewBag.ContentType }, new { @class = "adminLink" })
                </div>
                
            }
            @Html.Partial("Menu", Model.BuildingMenu, new ViewDataDictionary { { "category", "Buildings" }, { "categoryAdmin", "Building" }, { "type", ViewBag.ContentType } })
            <div class="content-text">
                @if (Model.Building != null)
                {
                    @Html.Raw(Model.Building.Text)

                    
                    if (Request.IsAuthenticated)
                    {
                        <div>
                        @Html.ActionLink("Добавить блока контента", "AddContentItem", "Building", new { area = "Admin", id = Model.Building.Id }, new { @class = "adminLink" })
                            
                            </div>
                    }

                    foreach (var item in Model.Building.BuildingItems.OrderBy(c => c.SortOrder))
                    {
                        <div class="contentItem">
                            
                            @if (Request.IsAuthenticated)
                            {
                                <span class="sortOrder"> @item.SortOrder</span>
                                @Html.ActionLink("Редактировать", "EditContentItem", "Building", new { area = "Admin", id = item.Id }, new { @class = "adminLink" })
                                <text> &nbsp;</text>
                                 @Html.ActionLink("Удалить", "DeleteContentItem", "Building", new { area = "Admin", id = item.Id }, new { @class = "adminLink", onclick = "return confirm('Удалить элемент?')" })
                            }

                            @Html.Raw(item.Text)
                        </div>
                    }
                }
                
               
            </div>
            
           
                @Html.Partial("ObjectsViever", Model.BuildingObjects)
           
            <div class="clear">
            </div>
        </div>
    </div>
</div>
