@using SiteExtensions.Graphics
@model EM2014.Models.Product
<div id="productContainer" class="productDetails">
    <div class="title">
        <div class="inner left">
            <div class="inner right">
                <span>@Model.Title</span>
            </div>
        </div>
    </div>
    @if (Request.IsAuthenticated)
    {
        @Html.ActionLink("Добавить элемент", "AddProductItem", "Product", new { area = "Admin", id = Model.Id }, new { @class = "adminLink" })
    }

    @foreach (var item in Model.ProductItems.OrderBy(p => p.SortOrder))
    {
        string className = Request.IsAuthenticated ? "border" : "";
        
        <div class="@className">    
        
            @if (Request.IsAuthenticated)
            {
                <div>
                    @Html.ActionLink("Редактировать", "EditProductItem", "Product", new { area = "Admin", id = item.Id }, new { @class = "adminLink" })
                    @Html.ActionLink("Удалить", "DeleteProductItem", "Product", new { area = "Admin", id = item.Id }, new { @class = "adminLink", onclick = "return confirm('Удалить элемент?')" })
                </div>
            }

            @if (!string.IsNullOrEmpty(item.Text))
            {
                <div class="text">@Html.Raw(item.Text)</div>
            }


            @if (!string.IsNullOrEmpty(item.ImageSource))
            {
                <div class="image">
                    @Html.Raw(Html.OriginalImage("/Content/Images", item.ImageSource))
                </div>
            }

            
        
             
        </div>    
        
        
    }
</div>



@section BackLink
{
    @Html.Raw(Html.ActionLink("[IMAGE]","Index","Home",new{product="",category=Model.Content.Name},null).ToString().Replace("[IMAGE]","<div id=\"back-link\"></div>"))
}