@using Kulumu.Models
@model Kulumu.Models.OrderFormModel
<script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<script type="text/javascript">
    function beg_req() {
        $("#sbm_btn").css("display", "none");
    }
</script>

@{
    AjaxOptions options = new AjaxOptions
    {
        HttpMethod = "Post",
        UpdateTargetId = "order",
        OnBegin = "beg_req"
    };        
}

@{
    Html.EnableClientValidation();
}

@using (Ajax.BeginForm("Order", "Home", options))
{
    if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div class="errorMessage">
            @Model.ErrorMessage
        </div>
    }
 
    @Html.HiddenFor(model => model.ProductId)
    @Html.HiddenFor(model => model.ProductTitle)
    
    <div class="feedBackForm">
        @Html.ValidationSummary(true)
        <table>
            <tr>
                <td>@Html.LabelFor(model => model.Name)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.Name)<br />
                    @Html.ValidationMessageFor(model => model.Name)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.Email)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.Email)<br />
                    @Html.ValidationMessageFor(model => model.Email)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.Phone)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.Phone)<br />
                    @Html.ValidationMessageFor(model => model.Phone)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.Address)
                </td>
                <td>
                    @Html.TextAreaFor(model => model.Address)<br />
                    @Html.ValidationMessageFor(model => model.Address)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.Size)
                </td>
                <td>
                    @{
                        var sl = new List<SelectListItem>();
                        if (Model.ProductSizes != null)
                        {
                            sl.AddRange(Model.ProductSizes.Select(ps => new SelectListItem {Text = ps.Size, Value = ps.Size}).ToList());
                        }
                        else
                        {
                            sl.Add(new SelectListItem { Text = Model.Size, Value = Model.Size });
                        }
                    }
                                     @Html.DropDownListFor(model => model.Size, sl)<br />
                                     @Html.ValidationMessageFor(model => model.Size)
                </td>
            </tr>
            <tr>
                <td colspan="2" style="padding-bottom:0;">@Html.LabelFor(model => model.AntiSpamAnswer)</td>
            </tr>
            <tr>
                <td style="height: 40px;">
                </td>
                <td>
                    @Html.TextBoxFor(model => model.AntiSpamAnswer)<br />
                    @Html.ValidationMessageFor(model => model.AntiSpamAnswer)
                </td>
            </tr>
            <tr>
                <td colspan="2" style="text-align:center; padding-top:10px;">
                    <input type="submit" id="sbm_btn" value="Отправить"/>
                </td>
            </tr>
        </table>
        
    </div>
}