@using Filimonov
@using Filimonov.Models
@using SiteExtensions.Graphics
@model Filimonov.Models.Category
@{
    ViewBag.Title = SiteSettings.PresentationTitle + " - Библиотека изображений - " + Model.Title;
    Layout = "~/Areas/Presentation/Views/Shared/_Layout.cshtml";
}
@Html.Partial("_PresentationMenu")
@if (Roles.IsUserInRole(User.Identity.Name, "Administrators"))
{
    <div>
        @Html.ActionLink("Добавить изображения", "Create", "Product", new { area = "Presentation", id = Model.Id }, new { @class = "adminLink" })
    </div>
}
<div class="category-title">
    <h1>@Model.Title</h1>
</div>
<div class="layouts-filter">
    @{
        var layouts = (IEnumerable<Layout>)ViewBag.Layouts;
    }
    <ul>
        @foreach (var item in layouts)
        {
            if (ViewBag.Layout == item.Name || (string.IsNullOrEmpty(item.Name) && string.IsNullOrEmpty(ViewBag.Layout)))
            {
            <li>@item.Title</li>
            }
            else
            {
            <li>@Html.ActionLink(item.Title, "Details", "Category", new { id = Model.Name, layout = item.Name, set = (string)ViewBag.ProductSetId }, null)</li>
            }

        }
    </ul>
</div>
<div class="category-details">
    @if (!Roles.IsUserInRole(User.Identity.Name, "Administrators"))
    {
        <div class="addToProductSetPanelContainer hidden1">
            <div class="addToProductSetPanelHidden">
                <div class="checkPanel" id="checkPanelShow"></div>
            </div>
            <div class="addToProductSetPanel hidden">
                <div class="checkPanel" id="checkPanelHide"></div>
                @using (Html.BeginForm("Details", "Category", new { id = Model.Name, layout = ViewBag.Layout }, FormMethod.Get, new { id = "f1" }))
                {
                    var sl = new List<SelectListItem>();
                    sl.AddRange(((IEnumerable<ProductSet>)ViewBag.ProductSets).Select(pc => new SelectListItem { Text = pc.Title, Value = pc.Id.ToString(), Selected = pc.Id.ToString() == (string)ViewBag.ProductSetId }).OrderBy(pc => pc.Value).ToList());
                    @Html.DropDownList("set", sl)
                    @Html.Hidden("layout", (string)ViewBag.Layout)
                }
                @if (((IEnumerable<ProductSet>)ViewBag.ProductSets).Any())
                {
                    using (Html.BeginForm("AddProductToSet", "Product", FormMethod.Post, new { id = "f2" }))
                    {
                        @Html.Hidden("categoryId", Model.Name)
                        @Html.Hidden("enablities")
                        @Html.Hidden("set", (string)ViewBag.ProductSetId)
                        @Html.Hidden("layout", (string)ViewBag.Layout)
                        <div class="copy-button">
                        </div>
                    }
                }
                else
                {
                    <div class="warning">
                        Необходимо создать ассоциативный ряд
                    </div>
                }
                
                
            </div>
           
        </div>
        
    }
    @{
        int selectedProductsCnt = 0;
    }
    @foreach (var item in Model.Products)
    {
        if (item.Layout.Name == ViewBag.Layout || string.IsNullOrEmpty(ViewBag.Layout))
        {
            var id = "p_" + item.Id;

        <div class="product" id="@id">
            @{
            if (!Roles.IsUserInRole(User.Identity.Name, "Administrators"))
            {
                if (item.Selected)
                {
                    selectedProductsCnt++;
                }
                string className = item.Selected ? "selected" : "";
                <div class="selectedMarker @className">
                </div>

                <div class="bgMarker" id="@id">
                </div>
                
                
            }
            }
            @if (Roles.IsUserInRole(User.Identity.Name, "Administrators"))
            {
                <div class="abs">
                    @Html.ActionLink("Сделать обложкой", "MakeDefaultPicture", "Product", new { area = "Presentation", id = item.Id }, new { @class = "adminLink", onclick = "return confirm('Сделать обложкой?')" })
                    @Html.ActionLink("Удалить", "Delete", "Product", new { area = "Presentation", id = item.Id }, new { @class = "adminLink", onclick = "return confirm('Удалить изображение?')" })
                </div>
            }
            
            <div class="commentsBar">
                    @Html.ActionLink("Комментарии ("+item.Comments.Count+")","Create","Comment",new{area="Presentation", id=item.Id},null)
                </div>

            <a rel="group1" class="fancyImage" href="/Content/Images/@item.ImageSource">
                @Html.Raw(Html.CachedImage("~/Content/Images/", item.ImageSource, SiteSettings.GetThumbnail("categoryProduct")))
            </a>
        </div>
        }
    }
    <div class="clear">
    </div>
</div>
@Html.Hidden("selectedProducts", selectedProductsCnt)
@section Includes
{
    <link href="@Url.Content("~/Content/fancybox/jquery.fancybox-1.3.4.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Content/fancybox/jquery.fancybox-1.3.4.js")" type="text/javascript"></script>
}
