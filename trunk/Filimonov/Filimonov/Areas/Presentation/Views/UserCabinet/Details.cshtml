@using Filimonov
@using Filimonov.Models
@using SiteExtensions.Graphics
@model Filimonov.Models.Customer
@{
    ViewBag.Title = SiteSettings.PresentationTitle + " - Раздел заказчика";
    Layout = "~/Areas/Presentation/Views/Shared/_Layout.cshtml";
}
@Html.Partial("_PresentationMenu")
<div class="category-title">
    <h1>@Model.Title</h1>
</div>
<div class="peroductSetSelector">
    @using (Html.BeginForm("Details", "UserCabinet", new { id = Model.Name, layout = ViewBag.Layout }, FormMethod.Get, new { id = "f1" }))
    {
        var sl = new List<SelectListItem>();
        sl.AddRange(Model.ProductSets.Select(pc => new SelectListItem { Text = pc.Title, Value = pc.Id.ToString(), Selected = pc.Id.ToString() == (string)ViewBag.ProductSetId }).OrderBy(pc => pc.Text).ToList());
        @Html.DropDownList("set", sl)
        @Html.Hidden("layout", (string)ViewBag.Layout)
    }
    @*@foreach (var item in Model.ProductSets.OrderBy(ps => ps.Title))
    {
        <div>
            @item.Title
        </div>
    }*@
</div>
<div>
</div>
<div class="layouts-filter">
    @{
        var layouts = (IEnumerable<Layout>)ViewBag.Layouts;
    }
    <ul>
        @foreach (var item in layouts)
        {
            if (ViewBag.Layout == item.Name || (string.IsNullOrEmpty(item.Name) && string.IsNullOrEmpty(ViewBag.Layout)))
            {
            <li>@item.Title</li>
            }
            else
            {
            <li>@Html.ActionLink(item.Title, "Details", "UserCabinet", new { id = Model.Name, layout = item.Name, set = (string)ViewBag.ProductSetId }, null)</li>
            }

        }
    </ul>
</div>
<div class="category-details">
    @{
        if (ViewBag.ProductSetId != null)
        {
            var productSet = Model.ProductSets.First(ps => ps.Id.ToString() == (string) ViewBag.ProductSetId);

            foreach (var item in productSet.Products)
            {
                if (item.Layout.Name == ViewBag.Layout || string.IsNullOrEmpty(ViewBag.Layout))
                {
                    var id = "p_" + item.Id;

                    <div class="product" id="@id">
                        @{
                            string className = item.Selected ? "selected" : "";
                            <div class="selectedMarker @className">
                            </div>
                        }
                        @if (Roles.IsUserInRole(User.Identity.Name, "Administrators"))
                        {
                            <div class="abs">
                                @Html.ActionLink("Сделать обложкой", "MakeDefaultPicture", "Product", new {area = "Presentation", id = item.Id}, new {@class = "adminLink", onclick = "return confirm('Сделать обложкой?')"})
                                @Html.ActionLink("Удалить", "Delete", "Product", new {area = "Presentation", id = item.Id}, new {@class = "adminLink", onclick = "return confirm('Удалить изображение?')"})
                            </div>
                        }
                        @Html.Raw(Html.CachedImage("~/Content/Images/", item.ImageSource, SiteSettings.GetThumbnail("categoryProduct")))
                    </div>
                }
            }
        }
    }
    <div class="clear">
    </div>
</div>
