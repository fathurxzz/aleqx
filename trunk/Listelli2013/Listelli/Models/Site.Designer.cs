//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Site", "ContentContentLang", "Content", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Listelli.Models.Content), "ContentLang", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Listelli.Models.ContentLang), true)]
[assembly: EdmRelationshipAttribute("Site", "LanguageContentLang", "Language", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Listelli.Models.Language), "ContentLang", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Listelli.Models.ContentLang), true)]
[assembly: EdmRelationshipAttribute("Site", "BrandBrandItem", "Brand", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Listelli.Models.Brand), "BrandItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Listelli.Models.BrandItem), true)]
[assembly: EdmRelationshipAttribute("Site", "BrandItemBrandItemImage", "BrandItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Listelli.Models.BrandItem), "BrandItemImage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Listelli.Models.BrandItemImage), true)]
[assembly: EdmRelationshipAttribute("Site", "LanguageBrandLang", "Language", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Listelli.Models.Language), "BrandLang", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Listelli.Models.BrandLang), true)]
[assembly: EdmRelationshipAttribute("Site", "BrandBrandLang", "Brand", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Listelli.Models.Brand), "BrandLang", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Listelli.Models.BrandLang), true)]
[assembly: EdmRelationshipAttribute("Site", "LanguageBrandItemLang", "Language", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Listelli.Models.Language), "BrandItemLang", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Listelli.Models.BrandItemLang), true)]
[assembly: EdmRelationshipAttribute("Site", "BrandItemBrandItemLang", "BrandItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Listelli.Models.BrandItem), "BrandItemLang", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Listelli.Models.BrandItemLang), true)]
[assembly: EdmRelationshipAttribute("Site", "CategoryCategoryLang", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Listelli.Models.Category), "CategoryLang", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Listelli.Models.CategoryLang), true)]
[assembly: EdmRelationshipAttribute("Site", "LanguageCategoryLang", "Language", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Listelli.Models.Language), "CategoryLang", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Listelli.Models.CategoryLang), true)]
[assembly: EdmRelationshipAttribute("Site", "CategoryCategoryBrand", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Listelli.Models.Category), "CategoryBrand", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Listelli.Models.CategoryBrand), true)]
[assembly: EdmRelationshipAttribute("Site", "CategoryBrandCategoryBrandItem", "CategoryBrand", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Listelli.Models.CategoryBrand), "CategoryBrandItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Listelli.Models.CategoryBrandItem), true)]
[assembly: EdmRelationshipAttribute("Site", "CategoryBrandItemCategoryBrandItemLang", "CategoryBrandItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Listelli.Models.CategoryBrandItem), "CategoryBrandItemLang", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Listelli.Models.CategoryBrandItemLang), true)]
[assembly: EdmRelationshipAttribute("Site", "LanguageCategoryBrandItemLang", "Language", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Listelli.Models.Language), "CategoryBrandItemLang", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Listelli.Models.CategoryBrandItemLang), true)]
[assembly: EdmRelationshipAttribute("Site", "ArticleArticleItem", "Article", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Listelli.Models.Article), "ArticleItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Listelli.Models.ArticleItem), true)]
[assembly: EdmRelationshipAttribute("Site", "ArticleItemArticleItemLang", "ArticleItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Listelli.Models.ArticleItem), "ArticleItemLang", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Listelli.Models.ArticleItemLang), true)]
[assembly: EdmRelationshipAttribute("Site", "LanguageArtilceLang", "Language", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Listelli.Models.Language), "ArtilceLang", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Listelli.Models.ArticleLang), true)]
[assembly: EdmRelationshipAttribute("Site", "LanguageArticleItemLang", "Language", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Listelli.Models.Language), "ArticleItemLang", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Listelli.Models.ArticleItemLang), true)]
[assembly: EdmRelationshipAttribute("Site", "ArticleArticleLang", "Article", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Listelli.Models.Article), "ArticleLang", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Listelli.Models.ArticleLang), true)]
[assembly: EdmRelationshipAttribute("Site", "LanguageBrandGroupLang", "Language", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Listelli.Models.Language), "BrandGroupLang", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Listelli.Models.BrandGroupLang), true)]
[assembly: EdmRelationshipAttribute("Site", "LanguageBrandGroupItemLang", "Language", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Listelli.Models.Language), "BrandGroupItemLang", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Listelli.Models.BrandGroupItemLang), true)]
[assembly: EdmRelationshipAttribute("Site", "BrandGroupItemBrandGroupItemLang", "BrandGroupItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Listelli.Models.BrandGroupItem), "BrandGroupItemLang", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Listelli.Models.BrandGroupItemLang), true)]
[assembly: EdmRelationshipAttribute("Site", "BrandGroupBrandGroupItem", "BrandGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Listelli.Models.BrandGroup), "BrandGroupItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Listelli.Models.BrandGroupItem), true)]
[assembly: EdmRelationshipAttribute("Site", "BrandGroupBrandGroupLang", "BrandGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Listelli.Models.BrandGroup), "BrandGroupLang", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Listelli.Models.BrandGroupLang), true)]
[assembly: EdmRelationshipAttribute("Site", "BrandGroupBrand", "BrandGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Listelli.Models.BrandGroup), "Brand", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Listelli.Models.Brand), true)]

#endregion

namespace Listelli.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SiteContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SiteContainer object using the connection string found in the 'SiteContainer' section of the application configuration file.
        /// </summary>
        public SiteContainer() : base("name=SiteContainer", "SiteContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SiteContainer object.
        /// </summary>
        public SiteContainer(string connectionString) : base(connectionString, "SiteContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SiteContainer object.
        /// </summary>
        public SiteContainer(EntityConnection connection) : base(connection, "SiteContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Language> Language
        {
            get
            {
                if ((_Language == null))
                {
                    _Language = base.CreateObjectSet<Language>("Language");
                }
                return _Language;
            }
        }
        private ObjectSet<Language> _Language;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Content> Content
        {
            get
            {
                if ((_Content == null))
                {
                    _Content = base.CreateObjectSet<Content>("Content");
                }
                return _Content;
            }
        }
        private ObjectSet<Content> _Content;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContentLang> ContentLang
        {
            get
            {
                if ((_ContentLang == null))
                {
                    _ContentLang = base.CreateObjectSet<ContentLang>("ContentLang");
                }
                return _ContentLang;
            }
        }
        private ObjectSet<ContentLang> _ContentLang;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Brand> Brand
        {
            get
            {
                if ((_Brand == null))
                {
                    _Brand = base.CreateObjectSet<Brand>("Brand");
                }
                return _Brand;
            }
        }
        private ObjectSet<Brand> _Brand;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BrandItem> BrandItem
        {
            get
            {
                if ((_BrandItem == null))
                {
                    _BrandItem = base.CreateObjectSet<BrandItem>("BrandItem");
                }
                return _BrandItem;
            }
        }
        private ObjectSet<BrandItem> _BrandItem;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BrandItemImage> BrandItemImage
        {
            get
            {
                if ((_BrandItemImage == null))
                {
                    _BrandItemImage = base.CreateObjectSet<BrandItemImage>("BrandItemImage");
                }
                return _BrandItemImage;
            }
        }
        private ObjectSet<BrandItemImage> _BrandItemImage;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BrandLang> BrandLang
        {
            get
            {
                if ((_BrandLang == null))
                {
                    _BrandLang = base.CreateObjectSet<BrandLang>("BrandLang");
                }
                return _BrandLang;
            }
        }
        private ObjectSet<BrandLang> _BrandLang;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BrandItemLang> BrandItemLang
        {
            get
            {
                if ((_BrandItemLang == null))
                {
                    _BrandItemLang = base.CreateObjectSet<BrandItemLang>("BrandItemLang");
                }
                return _BrandItemLang;
            }
        }
        private ObjectSet<BrandItemLang> _BrandItemLang;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Category
        {
            get
            {
                if ((_Category == null))
                {
                    _Category = base.CreateObjectSet<Category>("Category");
                }
                return _Category;
            }
        }
        private ObjectSet<Category> _Category;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CategoryLang> CategoryLang
        {
            get
            {
                if ((_CategoryLang == null))
                {
                    _CategoryLang = base.CreateObjectSet<CategoryLang>("CategoryLang");
                }
                return _CategoryLang;
            }
        }
        private ObjectSet<CategoryLang> _CategoryLang;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CategoryBrand> CategoryBrand
        {
            get
            {
                if ((_CategoryBrand == null))
                {
                    _CategoryBrand = base.CreateObjectSet<CategoryBrand>("CategoryBrand");
                }
                return _CategoryBrand;
            }
        }
        private ObjectSet<CategoryBrand> _CategoryBrand;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CategoryBrandItem> CategoryBrandItem
        {
            get
            {
                if ((_CategoryBrandItem == null))
                {
                    _CategoryBrandItem = base.CreateObjectSet<CategoryBrandItem>("CategoryBrandItem");
                }
                return _CategoryBrandItem;
            }
        }
        private ObjectSet<CategoryBrandItem> _CategoryBrandItem;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CategoryBrandItemLang> CategoryBrandItemLang
        {
            get
            {
                if ((_CategoryBrandItemLang == null))
                {
                    _CategoryBrandItemLang = base.CreateObjectSet<CategoryBrandItemLang>("CategoryBrandItemLang");
                }
                return _CategoryBrandItemLang;
            }
        }
        private ObjectSet<CategoryBrandItemLang> _CategoryBrandItemLang;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Article> Article
        {
            get
            {
                if ((_Article == null))
                {
                    _Article = base.CreateObjectSet<Article>("Article");
                }
                return _Article;
            }
        }
        private ObjectSet<Article> _Article;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ArticleLang> ArticleLang
        {
            get
            {
                if ((_ArticleLang == null))
                {
                    _ArticleLang = base.CreateObjectSet<ArticleLang>("ArticleLang");
                }
                return _ArticleLang;
            }
        }
        private ObjectSet<ArticleLang> _ArticleLang;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ArticleItem> ArticleItem
        {
            get
            {
                if ((_ArticleItem == null))
                {
                    _ArticleItem = base.CreateObjectSet<ArticleItem>("ArticleItem");
                }
                return _ArticleItem;
            }
        }
        private ObjectSet<ArticleItem> _ArticleItem;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ArticleItemLang> ArticleItemLang
        {
            get
            {
                if ((_ArticleItemLang == null))
                {
                    _ArticleItemLang = base.CreateObjectSet<ArticleItemLang>("ArticleItemLang");
                }
                return _ArticleItemLang;
            }
        }
        private ObjectSet<ArticleItemLang> _ArticleItemLang;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BrandGroup> BrandGroup
        {
            get
            {
                if ((_BrandGroup == null))
                {
                    _BrandGroup = base.CreateObjectSet<BrandGroup>("BrandGroup");
                }
                return _BrandGroup;
            }
        }
        private ObjectSet<BrandGroup> _BrandGroup;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BrandGroupLang> BrandGroupLang
        {
            get
            {
                if ((_BrandGroupLang == null))
                {
                    _BrandGroupLang = base.CreateObjectSet<BrandGroupLang>("BrandGroupLang");
                }
                return _BrandGroupLang;
            }
        }
        private ObjectSet<BrandGroupLang> _BrandGroupLang;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BrandGroupItem> BrandGroupItem
        {
            get
            {
                if ((_BrandGroupItem == null))
                {
                    _BrandGroupItem = base.CreateObjectSet<BrandGroupItem>("BrandGroupItem");
                }
                return _BrandGroupItem;
            }
        }
        private ObjectSet<BrandGroupItem> _BrandGroupItem;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BrandGroupItemLang> BrandGroupItemLang
        {
            get
            {
                if ((_BrandGroupItemLang == null))
                {
                    _BrandGroupItemLang = base.CreateObjectSet<BrandGroupItemLang>("BrandGroupItemLang");
                }
                return _BrandGroupItemLang;
            }
        }
        private ObjectSet<BrandGroupItemLang> _BrandGroupItemLang;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Language EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLanguage(Language language)
        {
            base.AddObject("Language", language);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Content EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContent(Content content)
        {
            base.AddObject("Content", content);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContentLang EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContentLang(ContentLang contentLang)
        {
            base.AddObject("ContentLang", contentLang);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Brand EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBrand(Brand brand)
        {
            base.AddObject("Brand", brand);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BrandItem EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBrandItem(BrandItem brandItem)
        {
            base.AddObject("BrandItem", brandItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BrandItemImage EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBrandItemImage(BrandItemImage brandItemImage)
        {
            base.AddObject("BrandItemImage", brandItemImage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BrandLang EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBrandLang(BrandLang brandLang)
        {
            base.AddObject("BrandLang", brandLang);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BrandItemLang EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBrandItemLang(BrandItemLang brandItemLang)
        {
            base.AddObject("BrandItemLang", brandItemLang);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Category EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategory(Category category)
        {
            base.AddObject("Category", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CategoryLang EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategoryLang(CategoryLang categoryLang)
        {
            base.AddObject("CategoryLang", categoryLang);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CategoryBrand EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategoryBrand(CategoryBrand categoryBrand)
        {
            base.AddObject("CategoryBrand", categoryBrand);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CategoryBrandItem EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategoryBrandItem(CategoryBrandItem categoryBrandItem)
        {
            base.AddObject("CategoryBrandItem", categoryBrandItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CategoryBrandItemLang EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategoryBrandItemLang(CategoryBrandItemLang categoryBrandItemLang)
        {
            base.AddObject("CategoryBrandItemLang", categoryBrandItemLang);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Article EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToArticle(Article article)
        {
            base.AddObject("Article", article);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ArticleLang EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToArticleLang(ArticleLang articleLang)
        {
            base.AddObject("ArticleLang", articleLang);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ArticleItem EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToArticleItem(ArticleItem articleItem)
        {
            base.AddObject("ArticleItem", articleItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ArticleItemLang EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToArticleItemLang(ArticleItemLang articleItemLang)
        {
            base.AddObject("ArticleItemLang", articleItemLang);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BrandGroup EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBrandGroup(BrandGroup brandGroup)
        {
            base.AddObject("BrandGroup", brandGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BrandGroupLang EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBrandGroupLang(BrandGroupLang brandGroupLang)
        {
            base.AddObject("BrandGroupLang", brandGroupLang);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BrandGroupItem EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBrandGroupItem(BrandGroupItem brandGroupItem)
        {
            base.AddObject("BrandGroupItem", brandGroupItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BrandGroupItemLang EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBrandGroupItemLang(BrandGroupItemLang brandGroupItemLang)
        {
            base.AddObject("BrandGroupItemLang", brandGroupItemLang);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Site", Name="Article")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Article : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Article object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="published">Initial value of the Published property.</param>
        public static Article CreateArticle(global::System.Int32 id, global::System.DateTime date, global::System.Boolean published)
        {
            Article article = new Article();
            article.Id = id;
            article.Date = date;
            article.Published = published;
            return article;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Published
        {
            get
            {
                return _Published;
            }
            set
            {
                OnPublishedChanging(value);
                ReportPropertyChanging("Published");
                _Published = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Published");
                OnPublishedChanged();
            }
        }
        private global::System.Boolean _Published;
        partial void OnPublishedChanging(global::System.Boolean value);
        partial void OnPublishedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "ArticleArticleItem", "ArticleItem")]
        public EntityCollection<ArticleItem> ArticleItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ArticleItem>("Site.ArticleArticleItem", "ArticleItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ArticleItem>("Site.ArticleArticleItem", "ArticleItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "ArticleArticleLang", "ArticleLang")]
        public EntityCollection<ArticleLang> ArticleLangs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ArticleLang>("Site.ArticleArticleLang", "ArticleLang");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ArticleLang>("Site.ArticleArticleLang", "ArticleLang", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Site", Name="ArticleItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ArticleItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ArticleItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="contentType">Initial value of the ContentType property.</param>
        /// <param name="imageSource">Initial value of the ImageSource property.</param>
        /// <param name="articleId">Initial value of the ArticleId property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static ArticleItem CreateArticleItem(global::System.Int32 id, global::System.Int32 contentType, global::System.String imageSource, global::System.Int32 articleId, global::System.Int32 sortOrder)
        {
            ArticleItem articleItem = new ArticleItem();
            articleItem.Id = id;
            articleItem.ContentType = contentType;
            articleItem.ImageSource = imageSource;
            articleItem.ArticleId = articleId;
            articleItem.SortOrder = sortOrder;
            return articleItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContentType
        {
            get
            {
                return _ContentType;
            }
            set
            {
                OnContentTypeChanging(value);
                ReportPropertyChanging("ContentType");
                _ContentType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContentType");
                OnContentTypeChanged();
            }
        }
        private global::System.Int32 _ContentType;
        partial void OnContentTypeChanging(global::System.Int32 value);
        partial void OnContentTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImageSource
        {
            get
            {
                return _ImageSource;
            }
            set
            {
                OnImageSourceChanging(value);
                ReportPropertyChanging("ImageSource");
                _ImageSource = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ImageSource");
                OnImageSourceChanged();
            }
        }
        private global::System.String _ImageSource;
        partial void OnImageSourceChanging(global::System.String value);
        partial void OnImageSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ArticleId
        {
            get
            {
                return _ArticleId;
            }
            set
            {
                OnArticleIdChanging(value);
                ReportPropertyChanging("ArticleId");
                _ArticleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ArticleId");
                OnArticleIdChanged();
            }
        }
        private global::System.Int32 _ArticleId;
        partial void OnArticleIdChanging(global::System.Int32 value);
        partial void OnArticleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "ArticleArticleItem", "Article")]
        public Article Article
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Article>("Site.ArticleArticleItem", "Article").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Article>("Site.ArticleArticleItem", "Article").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Article> ArticleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Article>("Site.ArticleArticleItem", "Article");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Article>("Site.ArticleArticleItem", "Article", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "ArticleItemArticleItemLang", "ArticleItemLang")]
        public EntityCollection<ArticleItemLang> ArticleItemLangs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ArticleItemLang>("Site.ArticleItemArticleItemLang", "ArticleItemLang");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ArticleItemLang>("Site.ArticleItemArticleItemLang", "ArticleItemLang", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Site", Name="ArticleItemLang")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ArticleItemLang : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ArticleItemLang object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="articleItemId">Initial value of the ArticleItemId property.</param>
        /// <param name="languageId">Initial value of the LanguageId property.</param>
        public static ArticleItemLang CreateArticleItemLang(global::System.Int32 id, global::System.String text, global::System.Int32 articleItemId, global::System.Int32 languageId)
        {
            ArticleItemLang articleItemLang = new ArticleItemLang();
            articleItemLang.Id = id;
            articleItemLang.Text = text;
            articleItemLang.ArticleItemId = articleItemId;
            articleItemLang.LanguageId = languageId;
            return articleItemLang;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ArticleItemId
        {
            get
            {
                return _ArticleItemId;
            }
            set
            {
                OnArticleItemIdChanging(value);
                ReportPropertyChanging("ArticleItemId");
                _ArticleItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ArticleItemId");
                OnArticleItemIdChanged();
            }
        }
        private global::System.Int32 _ArticleItemId;
        partial void OnArticleItemIdChanging(global::System.Int32 value);
        partial void OnArticleItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageId
        {
            get
            {
                return _LanguageId;
            }
            set
            {
                OnLanguageIdChanging(value);
                ReportPropertyChanging("LanguageId");
                _LanguageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LanguageId");
                OnLanguageIdChanged();
            }
        }
        private global::System.Int32 _LanguageId;
        partial void OnLanguageIdChanging(global::System.Int32 value);
        partial void OnLanguageIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "ArticleItemArticleItemLang", "ArticleItem")]
        public ArticleItem ArticleItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ArticleItem>("Site.ArticleItemArticleItemLang", "ArticleItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ArticleItem>("Site.ArticleItemArticleItemLang", "ArticleItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ArticleItem> ArticleItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ArticleItem>("Site.ArticleItemArticleItemLang", "ArticleItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ArticleItem>("Site.ArticleItemArticleItemLang", "ArticleItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "LanguageArticleItemLang", "Language")]
        public Language Language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("Site.LanguageArticleItemLang", "Language").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("Site.LanguageArticleItemLang", "Language").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Language> LanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("Site.LanguageArticleItemLang", "Language");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Language>("Site.LanguageArticleItemLang", "Language", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Site", Name="ArticleLang")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ArticleLang : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ArticleLang object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="languageId">Initial value of the LanguageId property.</param>
        /// <param name="articleId">Initial value of the ArticleId property.</param>
        public static ArticleLang CreateArticleLang(global::System.Int32 id, global::System.String title, global::System.String description, global::System.Int32 languageId, global::System.Int32 articleId)
        {
            ArticleLang articleLang = new ArticleLang();
            articleLang.Id = id;
            articleLang.Title = title;
            articleLang.Description = description;
            articleLang.LanguageId = languageId;
            articleLang.ArticleId = articleId;
            return articleLang;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageId
        {
            get
            {
                return _LanguageId;
            }
            set
            {
                OnLanguageIdChanging(value);
                ReportPropertyChanging("LanguageId");
                _LanguageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LanguageId");
                OnLanguageIdChanged();
            }
        }
        private global::System.Int32 _LanguageId;
        partial void OnLanguageIdChanging(global::System.Int32 value);
        partial void OnLanguageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ArticleId
        {
            get
            {
                return _ArticleId;
            }
            set
            {
                OnArticleIdChanging(value);
                ReportPropertyChanging("ArticleId");
                _ArticleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ArticleId");
                OnArticleIdChanged();
            }
        }
        private global::System.Int32 _ArticleId;
        partial void OnArticleIdChanging(global::System.Int32 value);
        partial void OnArticleIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "LanguageArtilceLang", "Language")]
        public Language Language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("Site.LanguageArtilceLang", "Language").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("Site.LanguageArtilceLang", "Language").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Language> LanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("Site.LanguageArtilceLang", "Language");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Language>("Site.LanguageArtilceLang", "Language", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "ArticleArticleLang", "Article")]
        public Article Article
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Article>("Site.ArticleArticleLang", "Article").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Article>("Site.ArticleArticleLang", "Article").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Article> ArticleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Article>("Site.ArticleArticleLang", "Article");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Article>("Site.ArticleArticleLang", "Article", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Site", Name="Brand")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Brand : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Brand object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="brandGroupId">Initial value of the BrandGroupId property.</param>
        public static Brand CreateBrand(global::System.Int32 id, global::System.String name, global::System.Int32 sortOrder, global::System.Int32 brandGroupId)
        {
            Brand brand = new Brand();
            brand.Id = id;
            brand.Name = name;
            brand.SortOrder = sortOrder;
            brand.BrandGroupId = brandGroupId;
            return brand;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageSource
        {
            get
            {
                return _ImageSource;
            }
            set
            {
                OnImageSourceChanging(value);
                ReportPropertyChanging("ImageSource");
                _ImageSource = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImageSource");
                OnImageSourceChanged();
            }
        }
        private global::System.String _ImageSource;
        partial void OnImageSourceChanging(global::System.String value);
        partial void OnImageSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BrandGroupId
        {
            get
            {
                return _BrandGroupId;
            }
            set
            {
                OnBrandGroupIdChanging(value);
                ReportPropertyChanging("BrandGroupId");
                _BrandGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BrandGroupId");
                OnBrandGroupIdChanged();
            }
        }
        private global::System.Int32 _BrandGroupId;
        partial void OnBrandGroupIdChanging(global::System.Int32 value);
        partial void OnBrandGroupIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "BrandBrandItem", "BrandItem")]
        public EntityCollection<BrandItem> BrandItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BrandItem>("Site.BrandBrandItem", "BrandItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BrandItem>("Site.BrandBrandItem", "BrandItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "BrandBrandLang", "BrandLang")]
        public EntityCollection<BrandLang> BrandLangs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BrandLang>("Site.BrandBrandLang", "BrandLang");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BrandLang>("Site.BrandBrandLang", "BrandLang", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "BrandGroupBrand", "BrandGroup")]
        public BrandGroup BrandGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BrandGroup>("Site.BrandGroupBrand", "BrandGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BrandGroup>("Site.BrandGroupBrand", "BrandGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BrandGroup> BrandGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BrandGroup>("Site.BrandGroupBrand", "BrandGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BrandGroup>("Site.BrandGroupBrand", "BrandGroup", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Site", Name="BrandGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BrandGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BrandGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="imageSource">Initial value of the ImageSource property.</param>
        public static BrandGroup CreateBrandGroup(global::System.Int32 id, global::System.String name, global::System.Int32 sortOrder, global::System.String imageSource)
        {
            BrandGroup brandGroup = new BrandGroup();
            brandGroup.Id = id;
            brandGroup.Name = name;
            brandGroup.SortOrder = sortOrder;
            brandGroup.ImageSource = imageSource;
            return brandGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImageSource
        {
            get
            {
                return _ImageSource;
            }
            set
            {
                OnImageSourceChanging(value);
                ReportPropertyChanging("ImageSource");
                _ImageSource = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ImageSource");
                OnImageSourceChanged();
            }
        }
        private global::System.String _ImageSource;
        partial void OnImageSourceChanging(global::System.String value);
        partial void OnImageSourceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "BrandGroupBrandGroupItem", "BrandGroupItem")]
        public EntityCollection<BrandGroupItem> BrandGroupItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BrandGroupItem>("Site.BrandGroupBrandGroupItem", "BrandGroupItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BrandGroupItem>("Site.BrandGroupBrandGroupItem", "BrandGroupItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "BrandGroupBrandGroupLang", "BrandGroupLang")]
        public EntityCollection<BrandGroupLang> BrandGroupLangs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BrandGroupLang>("Site.BrandGroupBrandGroupLang", "BrandGroupLang");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BrandGroupLang>("Site.BrandGroupBrandGroupLang", "BrandGroupLang", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "BrandGroupBrand", "Brand")]
        public EntityCollection<Brand> Brands
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Brand>("Site.BrandGroupBrand", "Brand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Brand>("Site.BrandGroupBrand", "Brand", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Site", Name="BrandGroupItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BrandGroupItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BrandGroupItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="contentType">Initial value of the ContentType property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="brandGroupId">Initial value of the BrandGroupId property.</param>
        public static BrandGroupItem CreateBrandGroupItem(global::System.Int32 id, global::System.Int32 contentType, global::System.Int32 sortOrder, global::System.Int32 brandGroupId)
        {
            BrandGroupItem brandGroupItem = new BrandGroupItem();
            brandGroupItem.Id = id;
            brandGroupItem.ContentType = contentType;
            brandGroupItem.SortOrder = sortOrder;
            brandGroupItem.BrandGroupId = brandGroupId;
            return brandGroupItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContentType
        {
            get
            {
                return _ContentType;
            }
            set
            {
                OnContentTypeChanging(value);
                ReportPropertyChanging("ContentType");
                _ContentType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContentType");
                OnContentTypeChanged();
            }
        }
        private global::System.Int32 _ContentType;
        partial void OnContentTypeChanging(global::System.Int32 value);
        partial void OnContentTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BrandGroupId
        {
            get
            {
                return _BrandGroupId;
            }
            set
            {
                OnBrandGroupIdChanging(value);
                ReportPropertyChanging("BrandGroupId");
                _BrandGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BrandGroupId");
                OnBrandGroupIdChanged();
            }
        }
        private global::System.Int32 _BrandGroupId;
        partial void OnBrandGroupIdChanging(global::System.Int32 value);
        partial void OnBrandGroupIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "BrandGroupItemBrandGroupItemLang", "BrandGroupItemLang")]
        public EntityCollection<BrandGroupItemLang> BrandGroupItemLangs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BrandGroupItemLang>("Site.BrandGroupItemBrandGroupItemLang", "BrandGroupItemLang");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BrandGroupItemLang>("Site.BrandGroupItemBrandGroupItemLang", "BrandGroupItemLang", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "BrandGroupBrandGroupItem", "BrandGroup")]
        public BrandGroup BrandGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BrandGroup>("Site.BrandGroupBrandGroupItem", "BrandGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BrandGroup>("Site.BrandGroupBrandGroupItem", "BrandGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BrandGroup> BrandGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BrandGroup>("Site.BrandGroupBrandGroupItem", "BrandGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BrandGroup>("Site.BrandGroupBrandGroupItem", "BrandGroup", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Site", Name="BrandGroupItemLang")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BrandGroupItemLang : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BrandGroupItemLang object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="languageId">Initial value of the LanguageId property.</param>
        /// <param name="brandGroupItemId">Initial value of the BrandGroupItemId property.</param>
        public static BrandGroupItemLang CreateBrandGroupItemLang(global::System.Int32 id, global::System.String text, global::System.Int32 languageId, global::System.Int32 brandGroupItemId)
        {
            BrandGroupItemLang brandGroupItemLang = new BrandGroupItemLang();
            brandGroupItemLang.Id = id;
            brandGroupItemLang.Text = text;
            brandGroupItemLang.LanguageId = languageId;
            brandGroupItemLang.BrandGroupItemId = brandGroupItemId;
            return brandGroupItemLang;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageId
        {
            get
            {
                return _LanguageId;
            }
            set
            {
                OnLanguageIdChanging(value);
                ReportPropertyChanging("LanguageId");
                _LanguageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LanguageId");
                OnLanguageIdChanged();
            }
        }
        private global::System.Int32 _LanguageId;
        partial void OnLanguageIdChanging(global::System.Int32 value);
        partial void OnLanguageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BrandGroupItemId
        {
            get
            {
                return _BrandGroupItemId;
            }
            set
            {
                OnBrandGroupItemIdChanging(value);
                ReportPropertyChanging("BrandGroupItemId");
                _BrandGroupItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BrandGroupItemId");
                OnBrandGroupItemIdChanged();
            }
        }
        private global::System.Int32 _BrandGroupItemId;
        partial void OnBrandGroupItemIdChanging(global::System.Int32 value);
        partial void OnBrandGroupItemIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "LanguageBrandGroupItemLang", "Language")]
        public Language Language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("Site.LanguageBrandGroupItemLang", "Language").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("Site.LanguageBrandGroupItemLang", "Language").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Language> LanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("Site.LanguageBrandGroupItemLang", "Language");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Language>("Site.LanguageBrandGroupItemLang", "Language", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "BrandGroupItemBrandGroupItemLang", "BrandGroupItem")]
        public BrandGroupItem BrandGroupItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BrandGroupItem>("Site.BrandGroupItemBrandGroupItemLang", "BrandGroupItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BrandGroupItem>("Site.BrandGroupItemBrandGroupItemLang", "BrandGroupItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BrandGroupItem> BrandGroupItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BrandGroupItem>("Site.BrandGroupItemBrandGroupItemLang", "BrandGroupItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BrandGroupItem>("Site.BrandGroupItemBrandGroupItemLang", "BrandGroupItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Site", Name="BrandGroupLang")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BrandGroupLang : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BrandGroupLang object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="languageId">Initial value of the LanguageId property.</param>
        /// <param name="brandGroupId">Initial value of the BrandGroupId property.</param>
        public static BrandGroupLang CreateBrandGroupLang(global::System.Int32 id, global::System.String title, global::System.String description, global::System.Int32 languageId, global::System.Int32 brandGroupId)
        {
            BrandGroupLang brandGroupLang = new BrandGroupLang();
            brandGroupLang.Id = id;
            brandGroupLang.Title = title;
            brandGroupLang.Description = description;
            brandGroupLang.LanguageId = languageId;
            brandGroupLang.BrandGroupId = brandGroupId;
            return brandGroupLang;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageId
        {
            get
            {
                return _LanguageId;
            }
            set
            {
                OnLanguageIdChanging(value);
                ReportPropertyChanging("LanguageId");
                _LanguageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LanguageId");
                OnLanguageIdChanged();
            }
        }
        private global::System.Int32 _LanguageId;
        partial void OnLanguageIdChanging(global::System.Int32 value);
        partial void OnLanguageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BrandGroupId
        {
            get
            {
                return _BrandGroupId;
            }
            set
            {
                OnBrandGroupIdChanging(value);
                ReportPropertyChanging("BrandGroupId");
                _BrandGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BrandGroupId");
                OnBrandGroupIdChanged();
            }
        }
        private global::System.Int32 _BrandGroupId;
        partial void OnBrandGroupIdChanging(global::System.Int32 value);
        partial void OnBrandGroupIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "LanguageBrandGroupLang", "Language")]
        public Language Language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("Site.LanguageBrandGroupLang", "Language").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("Site.LanguageBrandGroupLang", "Language").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Language> LanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("Site.LanguageBrandGroupLang", "Language");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Language>("Site.LanguageBrandGroupLang", "Language", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "BrandGroupBrandGroupLang", "BrandGroup")]
        public BrandGroup BrandGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BrandGroup>("Site.BrandGroupBrandGroupLang", "BrandGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BrandGroup>("Site.BrandGroupBrandGroupLang", "BrandGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BrandGroup> BrandGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BrandGroup>("Site.BrandGroupBrandGroupLang", "BrandGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BrandGroup>("Site.BrandGroupBrandGroupLang", "BrandGroup", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Site", Name="BrandItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BrandItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BrandItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="contentType">Initial value of the ContentType property.</param>
        /// <param name="brandId">Initial value of the BrandId property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static BrandItem CreateBrandItem(global::System.Int32 id, global::System.Int32 contentType, global::System.Int32 brandId, global::System.Int32 sortOrder)
        {
            BrandItem brandItem = new BrandItem();
            brandItem.Id = id;
            brandItem.ContentType = contentType;
            brandItem.BrandId = brandId;
            brandItem.SortOrder = sortOrder;
            return brandItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContentType
        {
            get
            {
                return _ContentType;
            }
            set
            {
                OnContentTypeChanging(value);
                ReportPropertyChanging("ContentType");
                _ContentType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContentType");
                OnContentTypeChanged();
            }
        }
        private global::System.Int32 _ContentType;
        partial void OnContentTypeChanging(global::System.Int32 value);
        partial void OnContentTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BrandId
        {
            get
            {
                return _BrandId;
            }
            set
            {
                OnBrandIdChanging(value);
                ReportPropertyChanging("BrandId");
                _BrandId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BrandId");
                OnBrandIdChanged();
            }
        }
        private global::System.Int32 _BrandId;
        partial void OnBrandIdChanging(global::System.Int32 value);
        partial void OnBrandIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "BrandBrandItem", "Brand")]
        public Brand Brand
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Brand>("Site.BrandBrandItem", "Brand").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Brand>("Site.BrandBrandItem", "Brand").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Brand> BrandReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Brand>("Site.BrandBrandItem", "Brand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Brand>("Site.BrandBrandItem", "Brand", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "BrandItemBrandItemImage", "BrandItemImage")]
        public EntityCollection<BrandItemImage> BrandItemImages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BrandItemImage>("Site.BrandItemBrandItemImage", "BrandItemImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BrandItemImage>("Site.BrandItemBrandItemImage", "BrandItemImage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "BrandItemBrandItemLang", "BrandItemLang")]
        public EntityCollection<BrandItemLang> BrandItemLangs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BrandItemLang>("Site.BrandItemBrandItemLang", "BrandItemLang");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BrandItemLang>("Site.BrandItemBrandItemLang", "BrandItemLang", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Site", Name="BrandItemImage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BrandItemImage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BrandItemImage object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="imageSource">Initial value of the ImageSource property.</param>
        /// <param name="brandItemId">Initial value of the BrandItemId property.</param>
        public static BrandItemImage CreateBrandItemImage(global::System.Int32 id, global::System.String imageSource, global::System.Int32 brandItemId)
        {
            BrandItemImage brandItemImage = new BrandItemImage();
            brandItemImage.Id = id;
            brandItemImage.ImageSource = imageSource;
            brandItemImage.BrandItemId = brandItemId;
            return brandItemImage;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImageSource
        {
            get
            {
                return _ImageSource;
            }
            set
            {
                OnImageSourceChanging(value);
                ReportPropertyChanging("ImageSource");
                _ImageSource = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ImageSource");
                OnImageSourceChanged();
            }
        }
        private global::System.String _ImageSource;
        partial void OnImageSourceChanging(global::System.String value);
        partial void OnImageSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BrandItemId
        {
            get
            {
                return _BrandItemId;
            }
            set
            {
                OnBrandItemIdChanging(value);
                ReportPropertyChanging("BrandItemId");
                _BrandItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BrandItemId");
                OnBrandItemIdChanged();
            }
        }
        private global::System.Int32 _BrandItemId;
        partial void OnBrandItemIdChanging(global::System.Int32 value);
        partial void OnBrandItemIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "BrandItemBrandItemImage", "BrandItem")]
        public BrandItem BrandItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BrandItem>("Site.BrandItemBrandItemImage", "BrandItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BrandItem>("Site.BrandItemBrandItemImage", "BrandItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BrandItem> BrandItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BrandItem>("Site.BrandItemBrandItemImage", "BrandItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BrandItem>("Site.BrandItemBrandItemImage", "BrandItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Site", Name="BrandItemLang")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BrandItemLang : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BrandItemLang object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="languageId">Initial value of the LanguageId property.</param>
        /// <param name="brandItemId">Initial value of the BrandItemId property.</param>
        public static BrandItemLang CreateBrandItemLang(global::System.Int32 id, global::System.String text, global::System.Int32 languageId, global::System.Int32 brandItemId)
        {
            BrandItemLang brandItemLang = new BrandItemLang();
            brandItemLang.Id = id;
            brandItemLang.Text = text;
            brandItemLang.LanguageId = languageId;
            brandItemLang.BrandItemId = brandItemId;
            return brandItemLang;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageId
        {
            get
            {
                return _LanguageId;
            }
            set
            {
                OnLanguageIdChanging(value);
                ReportPropertyChanging("LanguageId");
                _LanguageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LanguageId");
                OnLanguageIdChanged();
            }
        }
        private global::System.Int32 _LanguageId;
        partial void OnLanguageIdChanging(global::System.Int32 value);
        partial void OnLanguageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BrandItemId
        {
            get
            {
                return _BrandItemId;
            }
            set
            {
                OnBrandItemIdChanging(value);
                ReportPropertyChanging("BrandItemId");
                _BrandItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BrandItemId");
                OnBrandItemIdChanged();
            }
        }
        private global::System.Int32 _BrandItemId;
        partial void OnBrandItemIdChanging(global::System.Int32 value);
        partial void OnBrandItemIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "LanguageBrandItemLang", "Language")]
        public Language Language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("Site.LanguageBrandItemLang", "Language").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("Site.LanguageBrandItemLang", "Language").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Language> LanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("Site.LanguageBrandItemLang", "Language");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Language>("Site.LanguageBrandItemLang", "Language", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "BrandItemBrandItemLang", "BrandItem")]
        public BrandItem BrandItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BrandItem>("Site.BrandItemBrandItemLang", "BrandItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BrandItem>("Site.BrandItemBrandItemLang", "BrandItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BrandItem> BrandItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BrandItem>("Site.BrandItemBrandItemLang", "BrandItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BrandItem>("Site.BrandItemBrandItemLang", "BrandItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Site", Name="BrandLang")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BrandLang : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BrandLang object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="languageId">Initial value of the LanguageId property.</param>
        /// <param name="brandId">Initial value of the BrandId property.</param>
        public static BrandLang CreateBrandLang(global::System.Int32 id, global::System.String title, global::System.Int32 languageId, global::System.Int32 brandId)
        {
            BrandLang brandLang = new BrandLang();
            brandLang.Id = id;
            brandLang.Title = title;
            brandLang.LanguageId = languageId;
            brandLang.BrandId = brandId;
            return brandLang;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageId
        {
            get
            {
                return _LanguageId;
            }
            set
            {
                OnLanguageIdChanging(value);
                ReportPropertyChanging("LanguageId");
                _LanguageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LanguageId");
                OnLanguageIdChanged();
            }
        }
        private global::System.Int32 _LanguageId;
        partial void OnLanguageIdChanging(global::System.Int32 value);
        partial void OnLanguageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BrandId
        {
            get
            {
                return _BrandId;
            }
            set
            {
                OnBrandIdChanging(value);
                ReportPropertyChanging("BrandId");
                _BrandId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BrandId");
                OnBrandIdChanged();
            }
        }
        private global::System.Int32 _BrandId;
        partial void OnBrandIdChanging(global::System.Int32 value);
        partial void OnBrandIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "LanguageBrandLang", "Language")]
        public Language Language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("Site.LanguageBrandLang", "Language").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("Site.LanguageBrandLang", "Language").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Language> LanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("Site.LanguageBrandLang", "Language");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Language>("Site.LanguageBrandLang", "Language", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "BrandBrandLang", "Brand")]
        public Brand Brand
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Brand>("Site.BrandBrandLang", "Brand").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Brand>("Site.BrandBrandLang", "Brand").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Brand> BrandReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Brand>("Site.BrandBrandLang", "Brand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Brand>("Site.BrandBrandLang", "Brand", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Site", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="imageSource">Initial value of the ImageSource property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static Category CreateCategory(global::System.Int32 id, global::System.String name, global::System.String imageSource, global::System.Int32 sortOrder)
        {
            Category category = new Category();
            category.Id = id;
            category.Name = name;
            category.ImageSource = imageSource;
            category.SortOrder = sortOrder;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImageSource
        {
            get
            {
                return _ImageSource;
            }
            set
            {
                OnImageSourceChanging(value);
                ReportPropertyChanging("ImageSource");
                _ImageSource = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ImageSource");
                OnImageSourceChanged();
            }
        }
        private global::System.String _ImageSource;
        partial void OnImageSourceChanging(global::System.String value);
        partial void OnImageSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "CategoryCategoryLang", "CategoryLang")]
        public EntityCollection<CategoryLang> CategoryLangs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CategoryLang>("Site.CategoryCategoryLang", "CategoryLang");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CategoryLang>("Site.CategoryCategoryLang", "CategoryLang", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "CategoryCategoryBrand", "CategoryBrand")]
        public EntityCollection<CategoryBrand> CategoryBrands
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CategoryBrand>("Site.CategoryCategoryBrand", "CategoryBrand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CategoryBrand>("Site.CategoryCategoryBrand", "CategoryBrand", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Site", Name="CategoryBrand")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CategoryBrand : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CategoryBrand object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        public static CategoryBrand CreateCategoryBrand(global::System.Int32 id, global::System.String name, global::System.Int32 categoryId, global::System.Int32 sortOrder, global::System.String title)
        {
            CategoryBrand categoryBrand = new CategoryBrand();
            categoryBrand.Id = id;
            categoryBrand.Name = name;
            categoryBrand.CategoryId = categoryId;
            categoryBrand.SortOrder = sortOrder;
            categoryBrand.Title = title;
            return categoryBrand;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "CategoryCategoryBrand", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Site.CategoryCategoryBrand", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Site.CategoryCategoryBrand", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Site.CategoryCategoryBrand", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("Site.CategoryCategoryBrand", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "CategoryBrandCategoryBrandItem", "CategoryBrandItem")]
        public EntityCollection<CategoryBrandItem> CategoryBrandItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CategoryBrandItem>("Site.CategoryBrandCategoryBrandItem", "CategoryBrandItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CategoryBrandItem>("Site.CategoryBrandCategoryBrandItem", "CategoryBrandItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Site", Name="CategoryBrandItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CategoryBrandItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CategoryBrandItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="categoryBrandId">Initial value of the CategoryBrandId property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static CategoryBrandItem CreateCategoryBrandItem(global::System.Int32 id, global::System.Int32 categoryBrandId, global::System.Int32 sortOrder)
        {
            CategoryBrandItem categoryBrandItem = new CategoryBrandItem();
            categoryBrandItem.Id = id;
            categoryBrandItem.CategoryBrandId = categoryBrandId;
            categoryBrandItem.SortOrder = sortOrder;
            return categoryBrandItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryBrandId
        {
            get
            {
                return _CategoryBrandId;
            }
            set
            {
                OnCategoryBrandIdChanging(value);
                ReportPropertyChanging("CategoryBrandId");
                _CategoryBrandId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryBrandId");
                OnCategoryBrandIdChanged();
            }
        }
        private global::System.Int32 _CategoryBrandId;
        partial void OnCategoryBrandIdChanging(global::System.Int32 value);
        partial void OnCategoryBrandIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "CategoryBrandCategoryBrandItem", "CategoryBrand")]
        public CategoryBrand CategoryBrand
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CategoryBrand>("Site.CategoryBrandCategoryBrandItem", "CategoryBrand").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CategoryBrand>("Site.CategoryBrandCategoryBrandItem", "CategoryBrand").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CategoryBrand> CategoryBrandReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CategoryBrand>("Site.CategoryBrandCategoryBrandItem", "CategoryBrand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CategoryBrand>("Site.CategoryBrandCategoryBrandItem", "CategoryBrand", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "CategoryBrandItemCategoryBrandItemLang", "CategoryBrandItemLang")]
        public EntityCollection<CategoryBrandItemLang> CategoryBrandItemLangs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CategoryBrandItemLang>("Site.CategoryBrandItemCategoryBrandItemLang", "CategoryBrandItemLang");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CategoryBrandItemLang>("Site.CategoryBrandItemCategoryBrandItemLang", "CategoryBrandItemLang", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Site", Name="CategoryBrandItemLang")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CategoryBrandItemLang : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CategoryBrandItemLang object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="categoryBrandItemId">Initial value of the CategoryBrandItemId property.</param>
        /// <param name="languageId">Initial value of the LanguageId property.</param>
        public static CategoryBrandItemLang CreateCategoryBrandItemLang(global::System.Int32 id, global::System.String title, global::System.Int32 categoryBrandItemId, global::System.Int32 languageId)
        {
            CategoryBrandItemLang categoryBrandItemLang = new CategoryBrandItemLang();
            categoryBrandItemLang.Id = id;
            categoryBrandItemLang.Title = title;
            categoryBrandItemLang.CategoryBrandItemId = categoryBrandItemId;
            categoryBrandItemLang.LanguageId = languageId;
            return categoryBrandItemLang;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryBrandItemId
        {
            get
            {
                return _CategoryBrandItemId;
            }
            set
            {
                OnCategoryBrandItemIdChanging(value);
                ReportPropertyChanging("CategoryBrandItemId");
                _CategoryBrandItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryBrandItemId");
                OnCategoryBrandItemIdChanged();
            }
        }
        private global::System.Int32 _CategoryBrandItemId;
        partial void OnCategoryBrandItemIdChanging(global::System.Int32 value);
        partial void OnCategoryBrandItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageId
        {
            get
            {
                return _LanguageId;
            }
            set
            {
                OnLanguageIdChanging(value);
                ReportPropertyChanging("LanguageId");
                _LanguageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LanguageId");
                OnLanguageIdChanged();
            }
        }
        private global::System.Int32 _LanguageId;
        partial void OnLanguageIdChanging(global::System.Int32 value);
        partial void OnLanguageIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "CategoryBrandItemCategoryBrandItemLang", "CategoryBrandItem")]
        public CategoryBrandItem CategoryBrandItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CategoryBrandItem>("Site.CategoryBrandItemCategoryBrandItemLang", "CategoryBrandItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CategoryBrandItem>("Site.CategoryBrandItemCategoryBrandItemLang", "CategoryBrandItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CategoryBrandItem> CategoryBrandItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CategoryBrandItem>("Site.CategoryBrandItemCategoryBrandItemLang", "CategoryBrandItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CategoryBrandItem>("Site.CategoryBrandItemCategoryBrandItemLang", "CategoryBrandItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "LanguageCategoryBrandItemLang", "Language")]
        public Language Language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("Site.LanguageCategoryBrandItemLang", "Language").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("Site.LanguageCategoryBrandItemLang", "Language").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Language> LanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("Site.LanguageCategoryBrandItemLang", "Language");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Language>("Site.LanguageCategoryBrandItemLang", "Language", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Site", Name="CategoryLang")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CategoryLang : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CategoryLang object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="languageId">Initial value of the LanguageId property.</param>
        public static CategoryLang CreateCategoryLang(global::System.Int32 id, global::System.String title, global::System.Int32 categoryId, global::System.Int32 languageId)
        {
            CategoryLang categoryLang = new CategoryLang();
            categoryLang.Id = id;
            categoryLang.Title = title;
            categoryLang.CategoryId = categoryId;
            categoryLang.LanguageId = languageId;
            return categoryLang;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageId
        {
            get
            {
                return _LanguageId;
            }
            set
            {
                OnLanguageIdChanging(value);
                ReportPropertyChanging("LanguageId");
                _LanguageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LanguageId");
                OnLanguageIdChanged();
            }
        }
        private global::System.Int32 _LanguageId;
        partial void OnLanguageIdChanging(global::System.Int32 value);
        partial void OnLanguageIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "CategoryCategoryLang", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Site.CategoryCategoryLang", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Site.CategoryCategoryLang", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Site.CategoryCategoryLang", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("Site.CategoryCategoryLang", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "LanguageCategoryLang", "Language")]
        public Language Language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("Site.LanguageCategoryLang", "Language").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("Site.LanguageCategoryLang", "Language").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Language> LanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("Site.LanguageCategoryLang", "Language");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Language>("Site.LanguageCategoryLang", "Language", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Site", Name="Content")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Content : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Content object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="mainPage">Initial value of the MainPage property.</param>
        public static Content CreateContent(global::System.Int32 id, global::System.String name, global::System.Boolean mainPage)
        {
            Content content = new Content();
            content.Id = id;
            content.Name = name;
            content.MainPage = mainPage;
            return content;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean MainPage
        {
            get
            {
                return _MainPage;
            }
            set
            {
                OnMainPageChanging(value);
                ReportPropertyChanging("MainPage");
                _MainPage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MainPage");
                OnMainPageChanged();
            }
        }
        private global::System.Boolean _MainPage;
        partial void OnMainPageChanging(global::System.Boolean value);
        partial void OnMainPageChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "ContentContentLang", "ContentLang")]
        public EntityCollection<ContentLang> ContentLangs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContentLang>("Site.ContentContentLang", "ContentLang");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContentLang>("Site.ContentContentLang", "ContentLang", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Site", Name="ContentLang")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContentLang : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContentLang object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="contentId">Initial value of the ContentId property.</param>
        /// <param name="languageId">Initial value of the LanguageId property.</param>
        public static ContentLang CreateContentLang(global::System.Int32 id, global::System.String title, global::System.String text, global::System.Int32 contentId, global::System.Int32 languageId)
        {
            ContentLang contentLang = new ContentLang();
            contentLang.Id = id;
            contentLang.Title = title;
            contentLang.Text = text;
            contentLang.ContentId = contentId;
            contentLang.LanguageId = languageId;
            return contentLang;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContentId
        {
            get
            {
                return _ContentId;
            }
            set
            {
                OnContentIdChanging(value);
                ReportPropertyChanging("ContentId");
                _ContentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContentId");
                OnContentIdChanged();
            }
        }
        private global::System.Int32 _ContentId;
        partial void OnContentIdChanging(global::System.Int32 value);
        partial void OnContentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageId
        {
            get
            {
                return _LanguageId;
            }
            set
            {
                OnLanguageIdChanging(value);
                ReportPropertyChanging("LanguageId");
                _LanguageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LanguageId");
                OnLanguageIdChanged();
            }
        }
        private global::System.Int32 _LanguageId;
        partial void OnLanguageIdChanging(global::System.Int32 value);
        partial void OnLanguageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SeoDescription
        {
            get
            {
                return _SeoDescription;
            }
            set
            {
                OnSeoDescriptionChanging(value);
                ReportPropertyChanging("SeoDescription");
                _SeoDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SeoDescription");
                OnSeoDescriptionChanged();
            }
        }
        private global::System.String _SeoDescription;
        partial void OnSeoDescriptionChanging(global::System.String value);
        partial void OnSeoDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SeoKeywords
        {
            get
            {
                return _SeoKeywords;
            }
            set
            {
                OnSeoKeywordsChanging(value);
                ReportPropertyChanging("SeoKeywords");
                _SeoKeywords = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SeoKeywords");
                OnSeoKeywordsChanged();
            }
        }
        private global::System.String _SeoKeywords;
        partial void OnSeoKeywordsChanging(global::System.String value);
        partial void OnSeoKeywordsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "ContentContentLang", "Content")]
        public Content Content
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Content>("Site.ContentContentLang", "Content").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Content>("Site.ContentContentLang", "Content").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Content> ContentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Content>("Site.ContentContentLang", "Content");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Content>("Site.ContentContentLang", "Content", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "LanguageContentLang", "Language")]
        public Language Language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("Site.LanguageContentLang", "Language").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("Site.LanguageContentLang", "Language").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Language> LanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("Site.LanguageContentLang", "Language");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Language>("Site.LanguageContentLang", "Language", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Site", Name="Language")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Language : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Language object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Language CreateLanguage(global::System.Int32 id, global::System.String code, global::System.String name)
        {
            Language language = new Language();
            language.Id = id;
            language.Code = code;
            language.Name = name;
            return language;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "LanguageContentLang", "ContentLang")]
        public EntityCollection<ContentLang> ContentLangs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContentLang>("Site.LanguageContentLang", "ContentLang");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContentLang>("Site.LanguageContentLang", "ContentLang", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "LanguageBrandLang", "BrandLang")]
        public EntityCollection<BrandLang> BrandLangs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BrandLang>("Site.LanguageBrandLang", "BrandLang");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BrandLang>("Site.LanguageBrandLang", "BrandLang", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "LanguageBrandItemLang", "BrandItemLang")]
        public EntityCollection<BrandItemLang> BrandItemLangs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BrandItemLang>("Site.LanguageBrandItemLang", "BrandItemLang");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BrandItemLang>("Site.LanguageBrandItemLang", "BrandItemLang", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "LanguageCategoryLang", "CategoryLang")]
        public EntityCollection<CategoryLang> CategoryLangs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CategoryLang>("Site.LanguageCategoryLang", "CategoryLang");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CategoryLang>("Site.LanguageCategoryLang", "CategoryLang", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "LanguageCategoryBrandItemLang", "CategoryBrandItemLang")]
        public EntityCollection<CategoryBrandItemLang> CategoryBrandItemLangs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CategoryBrandItemLang>("Site.LanguageCategoryBrandItemLang", "CategoryBrandItemLang");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CategoryBrandItemLang>("Site.LanguageCategoryBrandItemLang", "CategoryBrandItemLang", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "LanguageArtilceLang", "ArtilceLang")]
        public EntityCollection<ArticleLang> ArtilceLangs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ArticleLang>("Site.LanguageArtilceLang", "ArtilceLang");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ArticleLang>("Site.LanguageArtilceLang", "ArtilceLang", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "LanguageArticleItemLang", "ArticleItemLang")]
        public EntityCollection<ArticleItemLang> ArticleItemLangs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ArticleItemLang>("Site.LanguageArticleItemLang", "ArticleItemLang");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ArticleItemLang>("Site.LanguageArticleItemLang", "ArticleItemLang", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "LanguageBrandGroupLang", "BrandGroupLang")]
        public EntityCollection<BrandGroupLang> BrandGroupLangs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BrandGroupLang>("Site.LanguageBrandGroupLang", "BrandGroupLang");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BrandGroupLang>("Site.LanguageBrandGroupLang", "BrandGroupLang", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "LanguageBrandGroupItemLang", "BrandGroupItemLang")]
        public EntityCollection<BrandGroupItemLang> BrandGroupItemLangs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BrandGroupItemLang>("Site.LanguageBrandGroupItemLang", "BrandGroupItemLang");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BrandGroupItemLang>("Site.LanguageBrandGroupItemLang", "BrandGroupItemLang", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
