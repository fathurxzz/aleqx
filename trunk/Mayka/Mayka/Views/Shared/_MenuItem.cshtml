@using Mayka.Helpers
@model Mayka.Helpers.MenuItem

@if (Model.Current)
{
    <li>
        @if (Request.IsAuthenticated)
        {
            <span class="sortOrder">@Model.SortOrder </span>
        }
        @Model.Title

        @if (Request.IsAuthenticated)
        {
            <br />
            @Html.ActionLink("ред", "Edit", "Content", new { area = "Admin", id = Model.ContentId }, new { @class = "adminLink" })
            @Html.Raw("&nbsp;")
            @Html.Raw("&nbsp;")
            @Html.Raw("&nbsp;")
            @Html.ActionLink("x", "Delete", "Content", new { area = "Admin", id = Model.ContentId }, new { @class = "adminLink", onclick = "return confirm('xить страницу?')" })
        }
    </li>
}
else
{
    switch (Model.ContentType)
    {
        //case ContentType.HomePage:
            

    @*<li>
        @if (Request.IsAuthenticated)
        {
            <span class="sortOrder">@Model.SortOrder </span>    
        }
        @Html.ActionLink(Model.Title, "Index", "Home", new { id = Model.ContentName }, null)
        @if (Request.IsAuthenticated)
        {
    
            <br />
            @Html.ActionLink("ред", "Edit", "Content", new { area = "Admin", id = Model.ContentId }, new { @class = "adminLink" })
            @Html.Raw("&nbsp;")
            @Html.Raw("&nbsp;")
            @Html.Raw("&nbsp;")
            @Html.ActionLink("x", "Delete", "Content", new { area = "Admin", id = Model.ContentId }, new { @class = "adminLink", onclick = "return confirm('xить страницу?')" })
        }
    </li>*@
        //break;
        
        
        case ContentType.Content:
        
    <li>
        @if (Request.IsAuthenticated)
        {
            <span class="sortOrder">@Model.SortOrder </span>    
        }
        @Html.ActionLink(Model.Title, "Index", "Home", new { id = Model.ContentName }, null)

        @if (Request.IsAuthenticated)
        {
            <br />
            @Html.ActionLink("ред", "Edit", "Content", new { area = "Admin", id = Model.ContentId }, new { @class = "adminLink" })
            @Html.Raw("&nbsp;")
            @Html.Raw("&nbsp;")
            @Html.Raw("&nbsp;")
            @Html.ActionLink("x", "Delete", "Content", new { area = "Admin", id = Model.ContentId }, new { @class = "adminLink", onclick = "return confirm('Удалить страницу?')" })
        }
    </li>        
        break;
        case ContentType.Gallery:
        
    <li>
        @if (Request.IsAuthenticated)
        {
            <span class="sortOrder">@Model.SortOrder </span>    
        }
        @Html.ActionLink(Model.Title, "Gallery", "Home", new { id = Model.ContentName }, null)
        @if (Request.IsAuthenticated)
        {
            <br />
            @Html.ActionLink("ред", "Edit", "Content", new { area = "Admin", id = Model.ContentId }, new { @class = "adminLink" })
            @Html.Raw("&nbsp;")
            @Html.Raw("&nbsp;")
            @Html.Raw("&nbsp;")
            @Html.ActionLink("x", "Delete", "Content", new { area = "Admin", id = Model.ContentId }, new { @class = "adminLink", onclick = "return confirm('Удалить страницу?')" })
        }

    </li>        
        break;
        case ContentType.Products:

        string className = Model.Selected ? "selected" : "";
    <li>
        @if (Request.IsAuthenticated)
        {
            <span class="sortOrder">@Model.SortOrder </span>    
        }
        @Html.ActionLink(Model.Title, "Products", "Home", new { id = Model.ContentName }, new { @class = className })
        @if (Request.IsAuthenticated)
        {
            
            <br />
            
            @Html.ActionLink("ред", "Edit", "Content", new { area = "Admin", id = Model.ContentId }, new { @class = "adminLink" })
            @Html.Raw("&nbsp;")
            @Html.Raw("&nbsp;")
            @Html.Raw("&nbsp;")
            @Html.ActionLink("x", "Delete", "Content", new { area = "Admin", id = Model.ContentId }, new { @class = "adminLink", onclick = "return confirm('Удалить страницу?')" })
        }

    </li>        
        break;
    }
}

