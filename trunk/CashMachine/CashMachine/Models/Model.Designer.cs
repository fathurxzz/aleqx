//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Site", "CardOperation", "Card", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CashMachine.Models.Card), "Operation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CashMachine.Models.Operation), true)]
[assembly: EdmRelationshipAttribute("Site", "OperationTypeOperation", "OperationType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CashMachine.Models.OperationType), "Operation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CashMachine.Models.Operation), true)]

#endregion

namespace CashMachine.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SiteContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SiteContext object using the connection string found in the 'SiteContext' section of the application configuration file.
        /// </summary>
        public SiteContext() : base("name=SiteContext", "SiteContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SiteContext object.
        /// </summary>
        public SiteContext(string connectionString) : base(connectionString, "SiteContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SiteContext object.
        /// </summary>
        public SiteContext(EntityConnection connection) : base(connection, "SiteContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Card> Card
        {
            get
            {
                if ((_Card == null))
                {
                    _Card = base.CreateObjectSet<Card>("Card");
                }
                return _Card;
            }
        }
        private ObjectSet<Card> _Card;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Operation> Operation
        {
            get
            {
                if ((_Operation == null))
                {
                    _Operation = base.CreateObjectSet<Operation>("Operation");
                }
                return _Operation;
            }
        }
        private ObjectSet<Operation> _Operation;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OperationType> OperationType
        {
            get
            {
                if ((_OperationType == null))
                {
                    _OperationType = base.CreateObjectSet<OperationType>("OperationType");
                }
                return _OperationType;
            }
        }
        private ObjectSet<OperationType> _OperationType;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Card EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCard(Card card)
        {
            base.AddObject("Card", card);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Operation EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOperation(Operation operation)
        {
            base.AddObject("Operation", operation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OperationType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOperationType(OperationType operationType)
        {
            base.AddObject("OperationType", operationType);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Site", Name="Card")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Card : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Card object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="locked">Initial value of the Locked property.</param>
        /// <param name="balance">Initial value of the Balance property.</param>
        /// <param name="pin">Initial value of the Pin property.</param>
        /// <param name="pinAttemptsCount">Initial value of the PinAttemptsCount property.</param>
        public static Card CreateCard(global::System.Int32 id, global::System.String number, global::System.Boolean locked, global::System.Decimal balance, global::System.String pin, global::System.Int32 pinAttemptsCount)
        {
            Card card = new Card();
            card.Id = id;
            card.Number = number;
            card.Locked = locked;
            card.Balance = balance;
            card.Pin = pin;
            card.PinAttemptsCount = pinAttemptsCount;
            return card;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            private set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Locked
        {
            get
            {
                return _Locked;
            }
            set
            {
                OnLockedChanging(value);
                ReportPropertyChanging("Locked");
                _Locked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Locked");
                OnLockedChanged();
            }
        }
        private global::System.Boolean _Locked;
        partial void OnLockedChanging(global::System.Boolean value);
        partial void OnLockedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Balance
        {
            get
            {
                return _Balance;
            }
            private set
            {
                OnBalanceChanging(value);
                ReportPropertyChanging("Balance");
                _Balance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Balance");
                OnBalanceChanged();
            }
        }
        private global::System.Decimal _Balance;
        partial void OnBalanceChanging(global::System.Decimal value);
        partial void OnBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Pin
        {
            get
            {
                return _Pin;
            }
            private set
            {
                OnPinChanging(value);
                ReportPropertyChanging("Pin");
                _Pin = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Pin");
                OnPinChanged();
            }
        }
        private global::System.String _Pin;
        partial void OnPinChanging(global::System.String value);
        partial void OnPinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PinAttemptsCount
        {
            get
            {
                return _PinAttemptsCount;
            }
            set
            {
                OnPinAttemptsCountChanging(value);
                ReportPropertyChanging("PinAttemptsCount");
                _PinAttemptsCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PinAttemptsCount");
                OnPinAttemptsCountChanged();
            }
        }
        private global::System.Int32 _PinAttemptsCount;
        partial void OnPinAttemptsCountChanging(global::System.Int32 value);
        partial void OnPinAttemptsCountChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "CardOperation", "Operation")]
        public EntityCollection<Operation> Operations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Operation>("Site.CardOperation", "Operation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Operation>("Site.CardOperation", "Operation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Site", Name="Operation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Operation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Operation object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="cardId">Initial value of the CardId property.</param>
        /// <param name="operationTypeId">Initial value of the OperationTypeId property.</param>
        public static Operation CreateOperation(global::System.Int32 id, global::System.Decimal amount, global::System.DateTime date, global::System.Int32 cardId, global::System.Int32 operationTypeId)
        {
            Operation operation = new Operation();
            operation.Id = id;
            operation.Amount = amount;
            operation.Date = date;
            operation.CardId = cardId;
            operation.OperationTypeId = operationTypeId;
            return operation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CardId
        {
            get
            {
                return _CardId;
            }
            set
            {
                OnCardIdChanging(value);
                ReportPropertyChanging("CardId");
                _CardId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CardId");
                OnCardIdChanged();
            }
        }
        private global::System.Int32 _CardId;
        partial void OnCardIdChanging(global::System.Int32 value);
        partial void OnCardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OperationTypeId
        {
            get
            {
                return _OperationTypeId;
            }
            set
            {
                OnOperationTypeIdChanging(value);
                ReportPropertyChanging("OperationTypeId");
                _OperationTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OperationTypeId");
                OnOperationTypeIdChanged();
            }
        }
        private global::System.Int32 _OperationTypeId;
        partial void OnOperationTypeIdChanging(global::System.Int32 value);
        partial void OnOperationTypeIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "CardOperation", "Card")]
        public Card Card
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Card>("Site.CardOperation", "Card").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Card>("Site.CardOperation", "Card").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Card> CardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Card>("Site.CardOperation", "Card");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Card>("Site.CardOperation", "Card", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "OperationTypeOperation", "OperationType")]
        public OperationType OperationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OperationType>("Site.OperationTypeOperation", "OperationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OperationType>("Site.OperationTypeOperation", "OperationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OperationType> OperationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OperationType>("Site.OperationTypeOperation", "OperationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OperationType>("Site.OperationTypeOperation", "OperationType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Site", Name="OperationType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OperationType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OperationType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static OperationType CreateOperationType(global::System.Int32 id, global::System.String description)
        {
            OperationType operationType = new OperationType();
            operationType.Id = id;
            operationType.Description = description;
            return operationType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Site", "OperationTypeOperation", "Operation")]
        public EntityCollection<Operation> Operations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Operation>("Site.OperationTypeOperation", "Operation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Operation>("Site.OperationTypeOperation", "Operation", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
